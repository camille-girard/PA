services:
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - '3306:3306'

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - '8080:80'
    depends_on:
      - db

  backend:
    build:
      context: backend
      dockerfile: docker/Dockerfile
      target: dev
      args:
        PHP_VERSION: 8.4.1
    volumes:
      - ./backend:/app
      - ./backend:/var/www/html
    ports:
      - '8000:8080'
    depends_on:
      - db
      - mercure
    environment:
      # S'assurer que l'URL interne pour publier est correcte
      MERCURE_URL: 'http://mercure/.well-known/mercure'
      # L'URL publique reste la même
      MERCURE_PUBLIC_URL: 'http://localhost:1337/.well-known/mercure'
    healthcheck:
      test: ["CMD-SHELL", "SCRIPT_FILENAME=/app/public/index.php REQUEST_METHOD=GET REQUEST_URI=/api/health cgi-fcgi -bind -connect localhost:9000 | grep 'running.*true' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Mandatory variables
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      # Allow all domains
      CORS_ALLOWED_ORIGINS: '*'
      # Autoriser les connexions sans JWT pour le debug (en développement seulement)
      MERCURE_ANONYMOUS: '1'
      # Loguer davantage d'information
      DEBUG: '1'
      # Customize to match your needs
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://localhost:3000 http://localhost:8000 http://frontend:3000 http://backend:8080 *
        anonymous
        publish_origins http://backend:8080 http://localhost:8000 *
        subscribe_origins http://localhost:3000 http://frontend:3000 *
        log_level debug
        use_forwarded_headers
        demo
    ports:
      - '1337:80'
    networks:
      - default

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NITRO_PRESET: node


  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - '8085:80'
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - backend
      - frontend

  matomo-db:
    image: mariadb:10.11
    environment:
      MYSQL_ROOT_PASSWORD: ${MATOMO_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MATOMO_DB_NAME}
      MYSQL_USER: ${MATOMO_DB_USER}
      MYSQL_PASSWORD: ${MATOMO_DB_PASSWORD}
    volumes:
      - matomo-db-data:/var/lib/mysql
    command: --max-allowed-packet=64MB
    restart: unless-stopped
    networks:
      - default

  matomo:
    image: matomo:5
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - matomo-data:/var/www/html
    environment:
      MATOMO_DATABASE_HOST: matomo-db
      MATOMO_DATABASE_ADAPTER: mysql
      MATOMO_DATABASE_TABLES_PREFIX: matomo_
      MATOMO_DATABASE_USERNAME: ${MATOMO_DB_USER}
      MATOMO_DATABASE_PASSWORD: ${MATOMO_DB_PASSWORD}
      MATOMO_DATABASE_DBNAME: ${MATOMO_DB_NAME}
      MATOMO_DATABASE_PORT: 3306
    depends_on:
      - matomo-db
    command: >
      bash -c "
        chown -R www-data:www-data /var/www/html &&
        chmod -R 755 /var/www/html &&
        apache2-foreground
      "

volumes:
  matomo-data:
  matomo-db-data:
