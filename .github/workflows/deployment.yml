name: Build and Push to Registry

on:
    push:
        branches:
            - main

env:
    REGISTRY: ghcr.io
    IMAGE_PREFIX: ghcr.io/camille-girard/pa

jobs:
    build-and-push:
        name: Build and Push Docker Images
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Generate image tag
              id: tag
              run: |
                  echo "TAG=sha-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ secrets.REGISTRY_USER }}
                  username: ${{ secrets.REGISTRY_HOST }}
                  password: ${{ secrets.REGISTRY_PASSWORD }}

            - name: Build and push Backend image
              uses: docker/build-push-action@v6
              with:
                  context: ./backend
                  file: ./backend/docker/Dockerfile
                  push: true
                  tags: ${{ env.IMAGE_PREFIX }}/backend:${{ steps.tag.outputs.TAG }}
                  build-args: |
                      PHP_VERSION=8.4.1

            - name: Build and push Frontend image
              uses: docker/build-push-action@v6
              with:
                  context: ./frontend
                  file: ./frontend/Dockerfile
                  target: main
                  push: true
                  tags: ${{ env.IMAGE_PREFIX }}/frontend:${{ steps.tag.outputs.TAG }}

            - name: Build and push Nginx image
              uses: docker/build-push-action@v6
              with:
                  context: ./nginx
                  file: ./nginx/Dockerfile
                  push: true
                  tags: ${{ env.IMAGE_PREFIX }}/nginx:${{ steps.tag.outputs.TAG }}

    deploy:
        name: Deploy to VPS
        runs-on: ubuntu-latest
        needs: build_and_push
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup SSH Agent
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

            - name: Deploy to VPS
              env:
                  SSH_HOST: ${{ secrets.VPS_HOST }}
                  SSH_USER: ${{ secrets.VPS_USER }}
              run: |
                  echo "StrictHostKeyChecking no" >> ~/.ssh/config
                  scp compose.prod.yaml $SSH_USER@$SSH_HOST:~/www/PA/docker-compose.yml
                  ssh $SSH_USER@$SSH_HOST << 'EOF'
                    cd ~/www/PA/
                    # Mettre à jour les images
                    docker compose pull
                    # Redémarrer les conteneurs
                    docker compose up -d
                    # Nettoyer les images non utilisées
                    docker image prune -f
                  EOF
